import os
import requests
from flask import Flask, request, jsonify  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –¥–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç jsonify
from datetime import datetime, timedelta

# Telegram API Token
telegram_token = "8101646300:AAE3hEx3q8953PHlfKiofvo4aH8zBBEUdrQ"
base_url = f"https://api.telegram.org/bot{telegram_token}"

# –°–µ–∫—Ä–µ—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å
bot_password = "—Å–µ–∫—Ä–µ—Ç–Ω—ã–π_–ø–∞—Ä–æ–ª—å"

# –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
allowed_users = set()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# >>> –ù–∞–±–æ—Ä –¥–ª—è "–ø–∞—É–∑—ã" –ø–æ –∏–º–µ–Ω–∏_—Ñ–∞–º–∏–ª–∏–∏
paused_names = set()

# Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

def send_message(chat_id, text):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    url = f"{base_url}/sendMessage"
    data = {"chat_id": chat_id, "text": text}
    requests.post(url, data=data)

@app.route(f"/{telegram_token}", methods=["POST"])
def telegram_webhook():
    data = request.json
    if "message" in data:
        chat_id = data["message"]["chat"]["id"]
        text = data["message"].get("text", "")

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç /start
        if text == "/start":
            if chat_id in allowed_users:
                send_message(chat_id, "–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.")
            else:
                user_states[chat_id] = "waiting_password"
                send_message(chat_id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞.")
            return "OK"

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –ø–∞—Ä–æ–ª—å
        if user_states.get(chat_id) == "waiting_password":
            if text == bot_password:
                allowed_users.add(chat_id)
                user_states[chat_id] = "authenticated"
                send_message(chat_id, "–ü–∞—Ä–æ–ª—å –ø—Ä–∏–Ω—è—Ç. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º!")
            else:
                send_message(chat_id, "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return "OK"

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
        if chat_id in allowed_users:
            if text.startswith("/clear "):
                name_to_clear = text.replace("/clear ", "").strip()
                if name_to_clear:
                    response = requests.post(
                       f"https://muzvideo2-bot.onrender.com/clear_context/{quote(name_to_clear)}"
                    )
                    if response.status_code == 200:
                        send_message(chat_id, f"–ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {name_to_clear} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.")
                    else:
                        send_message(chat_id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {name_to_clear}.")
                else:
                    send_message(chat_id, "–§–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã: /clear –ò–º—è_–§–∞–º–∏–ª–∏—è")
                return "OK"
            if text.startswith("/pause "):
                name_to_pause = text.replace("/pause ", "").strip()
                if name_to_pause:
                    paused_names.add(name_to_pause)
                    send_message(chat_id, f"–ü–æ—Å—Ç–∞–≤–∏–ª –Ω–∞ –ø–∞—É–∑—É: {name_to_pause}")
                else:
                    send_message(chat_id, "–§–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã: /pause –ò–º—è_–§–∞–º–∏–ª–∏—è")
                return "OK"

            elif text.startswith("/play "):
                name_to_play = text.replace("/play ", "").strip()
                if name_to_play in paused_names:
                    paused_names.remove(name_to_play)
                    send_message(chat_id, f"–í–æ–∑–æ–±–Ω–æ–≤–∏–ª –¥–ª—è: {name_to_play}")
                else:
                    send_message(chat_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{name_to_play}' –Ω–µ –±—ã–ª –Ω–∞ –ø–∞—É–∑–µ.")
                return "OK"

            send_message(chat_id, f"–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏: {text}")
        else:
            send_message(chat_id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è.")

    return "OK"

@app.route("/is_paused/<name>", methods=["GET"])
def check_pause(name):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –ø–∞—É–∑–µ.
    """
    if name in paused_names:
        return jsonify({"paused": True})  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –¥–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç jsonify
    return jsonify({"paused": False})

def send_telegram_notification(question, user_vk_link):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram –æ —Å—Ç–∞—Ä—Ç–µ –¥–∏–∞–ª–æ–≥–∞.
    """
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ –û–º—Å–∫–µ (+6 —á–∞—Å–æ–≤ –∫ UTC)
    current_time = datetime.utcnow() + timedelta(hours=6)
    formatted_time = current_time.strftime("%Y-%m-%d %H:%M:%S")

    # –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    message = f"""
üïí **–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è (–û–º—Å–∫):** {formatted_time}
üë§ **–°—Ç–∞—Ä—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å:** {question}
üîó **–°—Å—ã–ª–∫–∞ –Ω–∞ –¥–∏–∞–ª–æ–≥:** {user_vk_link}
"""

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    for admin_id in allowed_users:  # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º
        url = f"{base_url}/sendMessage"
        data = {
            "chat_id": admin_id,
            "text": message,
            "parse_mode": "Markdown"
        }
        requests.post(url, data=data)

# –ó–∞–ø—É—Å–∫ Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    # –£–∫–∞–∂–∏—Ç–µ –≤–µ–±—Ö—É–∫
    render_url = os.getenv("RENDER_EXTERNAL_URL")  # URL –≤–∞—à–µ–≥–æ Render
    if render_url:
        webhook_url = f"{render_url}/{telegram_token}"
        requests.get(f"{base_url}/setWebhook?url={webhook_url}")
        print(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
    else:
        print("–û—à–∏–±–∫–∞: URL —Å–µ—Ä–≤–∏—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    # –ó–∞–ø—É—Å–∫ Flask
    port = int(os.getenv("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
